// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid()) @map("_id")
  email    String  @unique
  password String
  cart     Cart?
  order    Order[]
}

model Cart {
  id        String     @id @default(cuid()) @map("_id")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @unique
  items     CartItem[]
}

model CartItem {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
}

model Product {
  id        String      @id @default(cuid()) @map("_id")
  title     String
  image     String
  price     Float
  rating    Float
  category  String
  orders    Order[]
  CartItem  CartItem[]
  OrderItem OrderItem[]
}

model Order {
  id         String      @id @default(cuid()) @map("_id")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  user       User        @relation(fields: [userId], references: [id])
  userId     String
  items      OrderItem[]
  status     OrderStatus
  rating     Int?
  currency   String?     @default("USD")
  totalPrice Float?      @default(0.0)
  Product    Product?    @relation(fields: [productId], references: [id])
  productId  String?
  deleted    Boolean     @default(false)
}

model OrderItem {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
}

enum OrderStatus {
  ACTIVE
  COMPLETED
}
